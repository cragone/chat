#deploy to prod workflow.
name: Start Production Deployment
on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        permissions:
            issues: write
            contents: read

        steps:
            - name: "Approve for push to Production."
              uses: trstringer/manual-approval@v1
              timeout-minutes: 30
              with:
                  secret: ${{github.TOKEN}}
                  approvers: "cragone"
                  minimum-approvals: 1

            - name: Check out code
              uses: actions/checkout@v4

            - name: Set small sha variable
              id: vars
              run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

            - name: Check variable
              run: |
                  echo "SHA short: ${{ env.sha_short }}"

            - name: "Login via Azure CLI"
              uses: azure/login@v2
              with:
                  creds: ${{ secrets.MICROSOFT_CREDENTIALS }}

            - name: "login to az docker"
              uses: azure/docker-login@v2
              with:
                  login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
                  username: ${{ secrets.REGISTRY_USERNAME }}
                  password: ${{ secrets.REGISTRY_PASSWORD }}

            - name: "Push docker image"
              working-directory: ./server
              run: |
                  docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/chat-prod:${{ env.sha_short }}
                  docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/chat-prod:${{ env.sha_short }}

            - name: Set up SSH key
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.PROD_PEM_KEY }}" > ~/.ssh/id_rsa
                  chmod 600 ~/.ssh/id_rsa
                  ssh-keyscan -H ${{ secrets.AZURE_VM_IP }} > ~/.ssh/known_hosts
                   # Check if SSH setup was successful
                  if [ $? -eq 0 ]; then
                    echo " "
                    echo "  🦅  SSH Ready! Welcome to RunClub CLI!  🦅 "
                    echo "------------------------------------------"
                    echo "        \   \   /   /"
                    echo "         \   \_/   /"
                    echo "          \       /"
                    echo "          (  - -  )   <-- Majestic Eagle"
                    echo "         /   ---   \\"
                    echo "        /  /     \\  \\"
                    echo "       /__/       \\__\\"
                    echo "------------------------------------------"
                    echo "  RunClub CLI setup complete! 🚀 Fly high!"
                  else
                    echo "❌ SSH setup failed! Check your credentials and VM status."
                    exit 1
                  fi
